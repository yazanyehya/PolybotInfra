name: Bastion auto-testing
on:
  push:
    branches:
      - dev

permissions: {}

jobs:
  TestBastion:
    runs-on: ubuntu-latest
    env:
      BASTION_INSTANCE_SSH_KEY: ${{ secrets.BASTION_INSTANCE_SSH_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: Parse instances IP address
        id: parse_ip
        run: |
          mkdir -p ~/.ssh
          cp test/ssh_config ~/.ssh/config
                  
          PUBLIC_IP=$(jq -r '.bastion_instance_public_ip' ec2_instances.json)
          echo "Public IP value: $PUBLIC_IP"
          if ! [[ "$PUBLIC_IP" =~ [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3} ]]; then
            echo "The value provided for bastion_instance_public_ip in ec2_instances.json is not a valid IPv4 address"
            exit 1
          fi
          
          POLYBOT_PRIVATE_IP=$(jq -r '.polybot_instance_private_ip' ec2_instances.json)
          echo "Private IP value: $POLYBOT_PRIVATE_IP"
          if ! [[ $POLYBOT_PRIVATE_IP =~ 10\.0\.0\.[0-9]{1,3} ]]; then
            echo "The value provided for polybot_instance_private_ip in ec2_instances.json is not a valid IPv4 address or does not belong to 10.0.0.0/24 which is the required subnet CIDR"
            exit 1
          fi
          
          YOLO_PRIVATE_IP=$(jq -r '.yolo_instance_private_ip' ec2_instances.json)
          echo "Private IP value: $YOLO_PRIVATE_IP"
          if ! [[ $YOLO_PRIVATE_IP =~ 10\.0\.1\.[0-9]{1,3} ]]; then
            echo "The value provided for yolo_instance_private_ip in ec2_instances.json is not a valid IPv4 address or does not belong to 10.0.1.0/24 which is the required subnet CIDR"
            exit 1
          fi
          
          if [[ -n "$BASTION_INSTANCE_SSH_KEY" ]]; then
              echo "$BASTION_INSTANCE_SSH_KEY" > private_key
              chmod 400 private_key
          
              if ! ssh-keygen -y -f private_key &>/dev/null; then
                  echo "The SSH private key provided in BASTION_INSTANCE_SSH_KEY is invalid."
                  exit 1
              fi
          else
              echo "The BASTION_INSTANCE_SSH_KEY secret content is empty. Please read carefully the submission guidelines."
              exit 1
          fi
          
          echo "PUBLIC_IP=$PUBLIC_IP" >> "$GITHUB_OUTPUT"
          echo "YOLO_PRIVATE_IP=$YOLO_PRIVATE_IP" >> "$GITHUB_OUTPUT"
          echo "POLYBOT_PRIVATE_IP=$POLYBOT_PRIVATE_IP" >> "$GITHUB_OUTPUT"

      - name: Test Bastion Connect
        run: |
          export PUBLIC_IP=${{ steps.parse_ip.outputs.PUBLIC_IP }}
          export YOLO_PRIVATE_IP=${{ steps.parse_ip.outputs.YOLO_PRIVATE_IP }}
          export POLYBOT_PRIVATE_IP=${{ steps.parse_ip.outputs.POLYBOT_PRIVATE_IP }}
          
          bash test/test_bastion.sh
